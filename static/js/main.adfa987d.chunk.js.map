{"version":3,"sources":["components/containers/search/index.js","components/header/header.js","components/state-map/index.js","components/map-view/index.js","config/eci-config.js","utils/environment.js","utils/data-service.js","components/charts/donut.js","components/state/index.js","components/state-wise/index.js","App.js","reportWebVitals.js","index.js"],"names":["listItem","cursor","SearchContainer","states","candidates","constituencies","useState","result","setResults","noOfResultsToShow","setNoOfResultsToShow","query","setQuery","useEffect","searchFor","toLowerCase","trim","filter","s","state","startsWith","includes","c","candidate","constituency","getStateDescription","noOfConstituencies","stateCode","code","length","noOfCandidates","getConstituencyDescription","constituencyCode","find","getCandidateDescription","party","console","warn","loadMore","style","textAlign","marginTop","height","lineHeight","onClick","window","dispatchEvent","Event","justify","xs","md","placeholder","onSearch","enterButton","gutter","sm","lg","itemLayout","dataSource","slice","renderItem","Item","log","Meta","description","title","logo","float","width","margin","fontWeight","color","AppHeader","page","setPage","theme","mode","defaultSelectedKeys","item","key","StateMap","MapView","name","ECI_CONFIG","url","APP_ENV","DataService","loader","message","loading","fetch","headers","then","r","text","catch","e","warner","setTimeout","hider","response","json","success","successor","data","errorer","error","Donut","this","props","stateData","chartData","map","rec","value","parseInt","totalCount","reduce","sum","config","appendPadding","angleField","colorField","radius","innerRadius","meta","formatter","v","label","type","offset","autoRotate","content","statistic","interactions","React","Component","StateDetails","setStateData","wholeTable","exec","dataToShow","HtmlTableToJson","parse","results","Object","keys","Party","StateWisePage","autoplay","dotPosition","dots","i","App","Content","Layout","Footer","Sider","setCandidates","setConstituencies","setStates","className","breakpoint","collapsedWidth","onBreakpoint","broken","onCollapse","collapsed","padding","minHeight","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.adfa987d.chunk.js","sourcesContent":["import { Button, Col, List, Row } from \"antd\";\nimport Search from \"antd/lib/input/Search\";\nimport { useEffect, useState } from \"react\";\n\nconst listItem = {\n  cursor: \"pointer\",\n};\n\n/**\n *\n * @param {{\n * states: State[],\n * candidates: Candidate[],\n * constituencies: Constituency[] }} param0\n * @returns\n */\nexport function SearchContainer({ states, candidates, constituencies }) {\n  const [result, setResults] = useState({\n    states: [],\n    constituencies: [],\n    candidates: [],\n  });\n\n  const [noOfResultsToShow, setNoOfResultsToShow] = useState(3);\n\n  const [query, setQuery] = useState(\"\");\n\n  useEffect(() => {\n    setNoOfResultsToShow(5);\n    if (query) {\n      const searchFor = query.toLowerCase().trim();\n      setResults({\n        states: [\n          ...states.filter((s) => s.state.toLowerCase().startsWith(searchFor)),\n          ...states.filter(\n            (s) =>\n              !s.state.toLowerCase().startsWith(searchFor) &&\n              s.state.toLowerCase().includes(searchFor)\n          ),\n        ],\n        candidates: [\n          ...candidates.filter((c) =>\n            c.candidate.toLowerCase().startsWith(searchFor)\n          ),\n          ...candidates.filter(\n            (c) =>\n              !c.candidate.toLowerCase().startsWith(searchFor) &&\n              c.candidate.toLowerCase().includes(searchFor)\n          ),\n        ],\n        constituencies: [\n          ...constituencies.filter((c) =>\n            c.constituency.toLowerCase().startsWith(searchFor)\n          ),\n          ...constituencies.filter(\n            (c) =>\n              !c.constituency.toLowerCase().startsWith(searchFor) &&\n              c.constituency.toLowerCase().includes(searchFor)\n          ),\n        ],\n      });\n    } else {\n      setResults({\n        states,\n        candidates,\n        constituencies,\n      });\n    }\n  }, [query, states, constituencies, candidates]);\n\n  /**\n   * Get the description to show for a state\n   * @param {State} state\n   */\n  const getStateDescription = (state) => {\n    const noOfConstituencies = constituencies.filter(\n      (c) => c.stateCode === state.code\n    ).length;\n    const noOfCandidates = candidates.filter(\n      (c) => c.stateCode === state.code\n    ).length;\n    return `${noOfConstituencies} constituencies, ${noOfCandidates} candidates`;\n  };\n\n  /**\n   *\n   * @param {Constituency} constituency\n   */\n  const getConstituencyDescription = (constituency) => {\n    const noOfCandidates = candidates.filter(\n      (c) => c.constituencyCode === constituency.code\n    ).length;\n    const state = states.find((s) => s.code === constituency.stateCode);\n\n    return `${noOfCandidates} candidates, ${state.state}`;\n  };\n\n  const goToStatePage = (state) => {\n    // TODO:\n    console.log(\"Go to state page\");\n  };\n\n  /**\n   * @param {Candidate} candidate\n   */\n  const getCandidateDescription = (candidate) => {\n    const constituency = constituencies.find(\n      (c) =>\n        c.code === candidate.constituencyCode &&\n        c.stateCode === candidate.stateCode\n    );\n    if (constituency) {\n      return `${candidate.party} contesting from ${constituency.constituency}`;\n    }\n    console.warn(\"Unknown constituency:\", { candidate });\n    return `${candidate.party}`;\n  };\n\n  const onLoadMore = () => {\n    setNoOfResultsToShow(noOfResultsToShow + 5);\n\n    // Resetting window's offsetTop so as to display react-virtualized demo underfloor.\n    // In real scene, you can using public method of react-virtualized:\n    // https://stackoverflow.com/questions/46700726/how-to-use-public-method-updateposition-of-react-virtualized\n    window.dispatchEvent(new Event(\"resize\"));\n  };\n\n  const loadMore = (\n    <div\n      style={{\n        textAlign: \"center\",\n        marginTop: 12,\n        height: 32,\n        lineHeight: \"32px\",\n      }}\n    >\n      <Button onClick={onLoadMore}>Load More</Button>\n    </div>\n  );\n  return (\n    <>\n      <Row justify=\"center\">\n        <Col xs={24} md={8}>\n          <Search\n            placeholder=\"input search text\"\n            onSearch={setQuery}\n            enterButton\n          />\n        </Col>\n      </Row>\n      <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\n        <Col xs={24} md={8}>\n          <List\n            itemLayout={\"horizontal\"}\n            dataSource={result.states.slice(0, noOfResultsToShow)}\n            renderItem={(state) => (\n              <List.Item onClick={() => goToStatePage(state)} style={listItem}>\n                <List.Item.Meta\n                  description={getStateDescription(state)}\n                  title={state.state}\n                ></List.Item.Meta>\n              </List.Item>\n            )}\n          ></List>\n        </Col>\n        <Col xs={24} md={8}>\n          <List\n            itemLayout={\"horizontal\"}\n            dataSource={result.constituencies.slice(0, noOfResultsToShow)}\n            renderItem={(constituency) => (\n              <List.Item>\n                <List.Item.Meta\n                  description={getConstituencyDescription(constituency)}\n                  title={constituency.constituency}\n                ></List.Item.Meta>\n              </List.Item>\n            )}\n          ></List>\n        </Col>\n        <Col xs={24} md={8}>\n          <List\n            itemLayout={\"horizontal\"}\n            dataSource={result.candidates.slice(0, noOfResultsToShow)}\n            renderItem={(candidate) => (\n              <List.Item>\n                <List.Item.Meta\n                  description={getCandidateDescription(candidate)}\n                  title={candidate.candidate}\n                ></List.Item.Meta>\n              </List.Item>\n            )}\n          ></List>\n        </Col>\n      </Row>\n      <Row justify=\"center\">\n        <Col xs={12} md={6}>\n          {loadMore} \n        </Col>\n      </Row>\n    </>\n  );\n}\n","import { Menu } from \"antd\";\nconst logo = {\n  float: \"left\",\n  width: \"120px\",\n  height: \"31px\",\n  margin: \"16px 24px 16px 0\",\n  fontWeight: \"bold\",\n  color: \"white\",\n  lineHeight: \"31px\",\n};\nexport function AppHeader({ page, setPage }) {\n  return (\n    <>\n      <div style={logo}>Live from ECI</div>\n      <Menu\n        theme=\"dark\"\n        mode=\"inline\"\n        defaultSelectedKeys={[page]}\n        onClick={(item) => setPage(item.key)}\n      >\n        <Menu.Item key=\"1\">States</Menu.Item>\n        <Menu.Item key=\"2\">Map</Menu.Item>\n        <Menu.Item key=\"3\">Favorites</Menu.Item>\n        <Menu.Item key=\"4\">Search</Menu.Item>\n      </Menu>\n    </>\n  );\n}\n","export function StateMap({state}) {\n    return <div>TODO: Show the state map of {state.code}</div>\n}","import { StateMap } from \"../state-map\";\n\nexport function MapView() {\n    return <StateMap state={{code: 'S22', name:'TN'}}/>\n}","export const ECI_CONFIG = {\n  statewise: {\n    url: (code) =>\n      `https://results.eci.gov.in/Result2021/partywiseresult-${code}.htm?st=${code}`,\n  },\n};\n","export const APP_ENV = {\n  dataURL: \"https://fathomless-stream-86331.herokuapp.com\",\n};\n","import { message } from \"antd\";\nimport { APP_ENV } from \"./environment\";\n\nexport const DataService = {\n  getHTMLData: (url) => {\n    const loader = message.loading(\"Loading state results...\");\n    return fetch(APP_ENV.dataURL + \"/\", {\n      headers: {\n        \"Target-URL\": url,\n      },\n    })\n      .then((r) => {\n        loader();\n        return r.text();\n      })\n      .catch((e) => {\n        const warner = message.warn(\"Unable to load state data\");\n        setTimeout(warner, 4000);\n      });\n  },\n\n  /**\n   * Returns the state, candidate and constituency data\n   * @returns {{\n   * states: State[],\n   * constituencies:  Constituency[],\n   * candidates: Candidate[ ̰]}}\n   */\n  getStatesConstituenciesAndCandidates: () => {\n    const hider = message.loading(\"Loading ECI data...\");\n    return fetch(APP_ENV.dataURL + \"/getCandidateData\")\n      .then((response) => response.json())\n      .then((result) => {\n        hider();\n        if (!result.success) {\n          const errorer = message.error(result.message);\n          setTimeout(errorer, 4000);\n          return { states: [], constituencies: [], candidates: [] };\n        } else {\n          const successor = message.success(\"Data loaded\");\n          setTimeout(successor, 3000);\n          return result.data;\n        }\n      });\n  },\n};\n","import { Pie } from \"@ant-design/charts\";\nimport React from \"react\";\n\nexport class Donut extends React.Component {\n  render() {\n    const { stateData, title } = this.props;\n\n    const chartData = stateData.map((rec) => ({\n      party: rec.party,\n      value: parseInt(rec.value, 10),\n    }));\n    const totalCount = chartData.reduce((sum, { value }) => sum + value, 0);\n\n    var config = {\n      appendPadding: 10,\n      data: chartData,\n      angleField: \"value\",\n      colorField: \"party\",\n      radius: 1,\n      innerRadius: 0.5,\n      meta: {\n        value: {\n          formatter: function formatter(v) {\n            return v;\n          },\n        },\n      },\n      label: {\n        type: \"inner\",\n        offset: \"-50%\",\n        style: { textAlign: \"center\" },\n        autoRotate: false,\n        content: \"{value}\",\n      },\n      statistic: {\n        title: {\n          formatter: (state) => (state && state.party ? state.party : title),\n        },\n        content: { formatter: (state) => (state && state.value) || totalCount },\n      },\n      interactions: [{ type: \"element-selected\" }, { type: \"element-active\" }],\n    };\n    return <Pie {...config} />;\n  }\n}\n","import HtmlTableToJson from \"html-table-to-json\";\nimport { useEffect, useState } from \"react\";\nimport { ECI_CONFIG } from \"../../config/eci-config\";\nimport { DataService } from \"../../utils/data-service\";\nimport { Donut } from \"../charts/donut\";\n\n/**\n *\n * @param {{state: State}} param0\n * @returns\n */\nexport function StateDetails({ state }) {\n  const [stateData, setStateData] = useState([]);\n\n  useEffect(() => {\n    DataService.getHTMLData(ECI_CONFIG.statewise.url(state.code)).then((r) => {\n      // console.log(r);\n      const matches = /<table ([\\w\\W]*)>([\\w\\W]*)<\\/table>/gm.exec(r);\n      // console.log(matches);\n      const wholeTable = matches[0];\n      const parsedData = HtmlTableToJson.parse(wholeTable);\n      // console.log(parsedData);\n      const jsonData = parsedData.results[0].filter(\n        (r) => Object.keys(r).length === 4 && r.Party !== \"Total\"\n      );\n      const dataToShow = jsonData.map((rec) => ({\n        party: rec.Party,\n        value: rec[\"Total\"],\n      }));\n      console.log(dataToShow);\n      setStateData(dataToShow);\n    });\n  }, [state.code]);\n\n  return <Donut stateData={stateData} title={state.state} />;\n}\n","import { Carousel } from \"antd\";\nimport { StateDetails } from \"../state\";\nimport \"./state-wise.css\";\n\n/**\n *\n * @param {{states: State[]}} param0\n * @returns\n */\nexport function StateWisePage({ states }) {\n  return (\n    <Carousel autoplay dotPosition={\"left\"} dots={\"dot-style\"}>\n      {states.map((state, i) => (\n        <StateDetails key={i} state={state}></StateDetails>\n      ))}\n    </Carousel>\n  );\n}\n","import { Layout } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport { SearchContainer } from \"./components/containers/search\";\nimport { AppHeader } from \"./components/header/header\";\nimport { MapView } from \"./components/map-view\";\nimport { StateWisePage } from \"./components/state-wise\";\nimport { DataService } from \"./utils/data-service\";\n\nfunction App() {\n  const { Content, Footer, Sider } = Layout;\n  const [page, setPage] = useState(\"1\");\n\n  /**\n   * @type Candidate[]\n   */\n  const [candidates, setCandidates] = useState([]);\n\n  /**\n   * @type Constituency[]\n   */\n  const [constituencies, setConstituencies] = useState([]);\n\n  /**\n   * @type State[]\n   */\n  const [states, setStates] = useState([]);\n\n  useEffect(() => {\n    DataService.getStatesConstituenciesAndCandidates().then(\n      ({ states, constituencies, candidates }) => {\n        setStates(states);\n        setCandidates(candidates);\n        setConstituencies(constituencies);\n      }\n    );\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <Layout>\n        <Sider\n          breakpoint=\"lg\"\n          collapsedWidth=\"0\"\n          onBreakpoint={(broken) => {\n            console.log(broken);\n          }}\n          onCollapse={(collapsed, type) => {\n            console.log(collapsed, type);\n          }}\n        >\n          <AppHeader {...{ page, setPage }} />\n        </Sider>\n         \n        <Layout className=\"layout\">\n          <Content key={page} style={{ margin: \"24px 16px 0\" }}>\n            <div\n              className=\"site-layout-background\"\n              style={{ padding: 24, minHeight: 360 }}\n            >\n              {page === \"1\" ? (\n                <StateWisePage {...{ states }} />\n              ) : page === \"2\" ? (\n                <MapView />\n              ) : page === \"4\" ? (\n                <SearchContainer {...{ states, candidates, constituencies }} />\n              ) : (\n                <div />\n              )}\n            </div>\n          </Content>\n          <Footer style={{ textAlign: \"center\" }}>\n            ©2021 Sathishkumar Maruthamuthu\n          </Footer>\n        </Layout>\n      </Layout>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}