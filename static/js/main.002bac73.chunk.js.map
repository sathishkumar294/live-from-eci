{"version":3,"sources":["components/containers/search/index.js","components/header/header.js","components/state-map/index.js","components/map-view/index.js","config/eci-config.js","utils/environment.js","utils/data-service.js","components/charts/donut.js","components/state/index.js","components/state-wise/index.js","App.js","reportWebVitals.js","index.js"],"names":["listItem","cursor","SearchContainer","states","candidates","constituencies","useState","result","setResults","query","setQuery","useEffect","filter","s","state","includes","c","candidate","constituency","getStateDescription","noOfConstituencies","stateCode","code","length","noOfCandidates","getConstituencyDescription","constituencyCode","find","getCandidateDescription","party","console","warn","justify","xs","md","placeholder","onSearch","enterButton","gutter","sm","lg","itemLayout","dataSource","slice","renderItem","Item","onClick","log","style","Meta","description","title","logo","float","width","height","margin","fontWeight","color","lineHeight","AppHeader","page","setPage","theme","mode","defaultSelectedKeys","item","key","StateMap","MapView","name","ECI_CONFIG","url","APP_ENV","DataService","loader","message","loading","fetch","headers","then","r","text","catch","e","warner","setTimeout","hider","response","json","success","successor","data","errorer","error","Donut","this","props","stateData","chartData","map","rec","value","parseInt","totalCount","reduce","sum","config","appendPadding","angleField","colorField","radius","innerRadius","meta","formatter","v","label","type","offset","textAlign","autoRotate","content","statistic","interactions","React","Component","StateDetails","setStateData","wholeTable","exec","dataToShow","HtmlTableToJson","parse","results","Object","keys","Party","StateWisePage","autoplay","dotPosition","dots","i","App","Content","Layout","Footer","Sider","setCandidates","setConstituencies","setStates","className","breakpoint","collapsedWidth","onBreakpoint","broken","onCollapse","collapsed","padding","minHeight","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.002bac73.chunk.js","sourcesContent":["import { Col, List, Row } from \"antd\";\nimport Search from \"antd/lib/input/Search\";\nimport { useEffect, useState } from \"react\";\n\nconst listItem = {\n  cursor: \"pointer\",\n};\n\n/**\n *\n * @param {{\n * states: State[],\n * candidates: Candidate[],\n * constituencies: Constituency[] }} param0\n * @returns\n */\nexport function SearchContainer({ states, candidates, constituencies }) {\n  const [result, setResults] = useState({\n    states: [],\n    constituencies: [],\n    candidates: [],\n  });\n\n  const [query, setQuery] = useState(\"\");\n\n  useEffect(() => {\n    if (query) {\n      setResults({\n        states: states.filter((s) => s.state.includes(query)),\n        candidates: candidates.filter((c) => c.candidate.includes(query)),\n        constituencies: constituencies.filter((c) =>\n          c.constituency.includes(query)\n        ),\n      });\n    } else {\n      setResults({\n        states,\n        candidates,\n        constituencies,\n      });\n    }\n  }, [query, states, constituencies, candidates]);\n\n  /**\n   * Get the description to show for a state\n   * @param {State} state\n   */\n  const getStateDescription = (state) => {\n    const noOfConstituencies = constituencies.filter(\n      (c) => c.stateCode === state.code\n    ).length;\n    const noOfCandidates = candidates.filter(\n      (c) => c.stateCode === state.code\n    ).length;\n    return `${noOfConstituencies} constituencies, ${noOfCandidates} candidates`;\n  };\n\n  /**\n   *\n   * @param {Constituency} constituency\n   */\n  const getConstituencyDescription = (constituency) => {\n    const noOfCandidates = candidates.filter(\n      (c) => c.constituencyCode === constituency.code\n    ).length;\n    const state = states.find((s) => s.code === constituency.stateCode);\n\n    return `${noOfCandidates} candidates, ${state.state}`;\n  };\n\n  const goToStatePage = (state) => {\n    // TODO:\n    console.log(\"Go to state page\");\n  };\n\n  /**\n   * @param {Candidate} candidate\n   */\n  const getCandidateDescription = (candidate) => {\n    const constituency = constituencies.find(\n      (c) => c.code === candidate.constituencyCode\n    );\n    if (constituency) {\n      return `${candidate.party} contesting from ${constituency.constituency}`;\n    }\n    console.warn(\"Unknown constituency:\", { candidate });\n    return `${candidate.party}`;\n  };\n\n  return (\n    <>\n      <Row justify=\"center\">\n        <Col xs={24} md={8}>\n          <Search\n            placeholder=\"input search text\"\n            onSearch={setQuery}\n            enterButton\n          />\n        </Col>\n      </Row>\n      <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\n        <Col xs={24} md={8}>\n          <List\n            itemLayout={\"horizontal\"}\n            dataSource={result.states.slice(0, 5)}\n            renderItem={(state) => (\n              <List.Item onClick={() => goToStatePage(state)} style={listItem}>\n                <List.Item.Meta\n                  description={getStateDescription(state)}\n                  title={state.state}\n                ></List.Item.Meta>\n              </List.Item>\n            )}\n          ></List>\n        </Col>\n        <Col xs={24} md={8}>\n          <List\n            itemLayout={\"horizontal\"}\n            dataSource={result.constituencies.slice(0, 5)}\n            renderItem={(constituency) => (\n              <List.Item>\n                <List.Item.Meta\n                  description={getConstituencyDescription(constituency)}\n                  title={constituency.constituency}\n                ></List.Item.Meta>\n              </List.Item>\n            )}\n          ></List>\n        </Col>\n        <Col xs={24} md={8}>\n          <List\n            itemLayout={\"horizontal\"}\n            dataSource={result.candidates.slice(0, 5)}\n            renderItem={(candidate) => (\n              <List.Item>\n                <List.Item.Meta\n                  description={getCandidateDescription(candidate)}\n                  title={candidate.candidate}\n                ></List.Item.Meta>\n              </List.Item>\n            )}\n          ></List>\n        </Col>\n      </Row>\n    </>\n  );\n}\n","import { Menu } from \"antd\";\nconst logo = {\n  float: \"left\",\n  width: \"120px\",\n  height: \"31px\",\n  margin: \"16px 24px 16px 0\",\n  fontWeight: \"bold\",\n  color: \"white\",\n  lineHeight: \"31px\",\n};\nexport function AppHeader({ page, setPage }) {\n  return (\n    <>\n      <div style={logo}>Live from ECI</div>\n      <Menu\n        theme=\"dark\"\n        mode=\"inline\"\n        defaultSelectedKeys={[page]}\n        onClick={(item) => setPage(item.key)}\n      >\n        <Menu.Item key=\"1\">States</Menu.Item>\n        <Menu.Item key=\"2\">Map</Menu.Item>\n        <Menu.Item key=\"3\">Favorites</Menu.Item>\n        <Menu.Item key=\"4\">Search</Menu.Item>\n      </Menu>\n    </>\n  );\n}\n","export function StateMap({state}) {\n    return <div>TODO: Show the state map of {state.code}</div>\n}","import { StateMap } from \"../state-map\";\n\nexport function MapView() {\n    return <StateMap state={{code: 'S22', name:'TN'}}/>\n}","export const ECI_CONFIG = {\n  statewise: {\n    url: (code) =>\n      `https://results.eci.gov.in/Result2021/partywiseresult-${code}.htm?st=${code}`,\n  },\n};\n","export const APP_ENV = {\n  dataURL: \"https://fathomless-stream-86331.herokuapp.com\",\n};\n","import { message } from \"antd\";\nimport { APP_ENV } from \"./environment\";\n\nexport const DataService = {\n  getHTMLData: (url) => {\n    const loader = message.loading(\"Loading state results...\");\n    return fetch(APP_ENV.dataURL + \"/\", {\n      headers: {\n        \"Target-URL\": url,\n      },\n    })\n      .then((r) => {\n        loader();\n        return r.text();\n      })\n      .catch((e) => {\n        const warner = message.warn(\"Unable to load state data\");\n        setTimeout(warner, 4000);\n      });\n  },\n\n  /**\n   * Returns the state, candidate and constituency data\n   * @returns {{\n   * states: State[],\n   * constituencies:  Constituency[],\n   * candidates: Candidate[ ̰]}}\n   */\n  getStatesConstituenciesAndCandidates: () => {\n    const hider = message.loading(\"Loading ECI data...\");\n    return fetch(APP_ENV.dataURL + \"/getCandidateData\")\n      .then((response) => response.json())\n      .then((result) => {\n        hider();\n        if (!result.success) {\n          const errorer = message.error(result.message);\n          setTimeout(errorer, 4000);\n          return { states: [], constituencies: [], candidates: [] };\n        } else {\n          const successor = message.success(\"Data loaded\");\n          setTimeout(successor, 3000);\n          return result.data;\n        }\n      });\n  },\n};\n","import { Pie } from \"@ant-design/charts\";\nimport React from \"react\";\n\nexport class Donut extends React.Component {\n  render() {\n    const { stateData, title } = this.props;\n\n    const chartData = stateData.map((rec) => ({\n      party: rec.party,\n      value: parseInt(rec.value, 10),\n    }));\n    const totalCount = chartData.reduce((sum, { value }) => sum + value, 0);\n\n    var config = {\n      appendPadding: 10,\n      data: chartData,\n      angleField: \"value\",\n      colorField: \"party\",\n      radius: 1,\n      innerRadius: 0.5,\n      meta: {\n        value: {\n          formatter: function formatter(v) {\n            return v;\n          },\n        },\n      },\n      label: {\n        type: \"inner\",\n        offset: \"-50%\",\n        style: { textAlign: \"center\" },\n        autoRotate: false,\n        content: \"{value}\",\n      },\n      statistic: {\n        title: {\n          formatter: (state) => (state && state.party ? state.party : title),\n        },\n        content: { formatter: (state) => (state && state.value) || totalCount },\n      },\n      interactions: [{ type: \"element-selected\" }, { type: \"element-active\" }],\n    };\n    return <Pie {...config} />;\n  }\n}\n","import HtmlTableToJson from \"html-table-to-json\";\nimport { useEffect, useState } from \"react\";\nimport { ECI_CONFIG } from \"../../config/eci-config\";\nimport { DataService } from \"../../utils/data-service\";\nimport { Donut } from \"../charts/donut\";\n\n/**\n *\n * @param {{state: State}} param0\n * @returns\n */\nexport function StateDetails({ state }) {\n  const [stateData, setStateData] = useState([]);\n\n  useEffect(() => {\n    DataService.getHTMLData(ECI_CONFIG.statewise.url(state.code)).then((r) => {\n      // console.log(r);\n      const matches = /<table ([\\w\\W]*)>([\\w\\W]*)<\\/table>/gm.exec(r);\n      // console.log(matches);\n      const wholeTable = matches[0];\n      const parsedData = HtmlTableToJson.parse(wholeTable);\n      // console.log(parsedData);\n      const jsonData = parsedData.results[0].filter(\n        (r) => Object.keys(r).length === 4 && r.Party !== \"Total\"\n      );\n      const dataToShow = jsonData.map((rec) => ({\n        party: rec.Party,\n        value: rec[\"Total\"],\n      }));\n      console.log(dataToShow);\n      setStateData(dataToShow);\n    });\n  }, [state.code]);\n\n  return <Donut stateData={stateData} title={state.state} />;\n}\n","import { Carousel } from \"antd\";\nimport { StateDetails } from \"../state\";\nimport \"./state-wise.css\";\n\n/**\n *\n * @param {{states: State[]}} param0\n * @returns\n */\nexport function StateWisePage({ states }) {\n  return (\n    <Carousel autoplay dotPosition={\"left\"} dots={\"dot-style\"}>\n      {states.map((state, i) => (\n        <StateDetails key={i} state={state}></StateDetails>\n      ))}\n    </Carousel>\n  );\n}\n","import { Layout } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport { SearchContainer } from \"./components/containers/search\";\nimport { AppHeader } from \"./components/header/header\";\nimport { MapView } from \"./components/map-view\";\nimport { StateWisePage } from \"./components/state-wise\";\nimport { DataService } from \"./utils/data-service\";\n\nfunction App() {\n  const { Content, Footer, Sider } = Layout;\n  const [page, setPage] = useState(\"1\");\n\n  /**\n   * @type Candidate[]\n   */\n  const [candidates, setCandidates] = useState([]);\n\n  /**\n   * @type Constituency[]\n   */\n  const [constituencies, setConstituencies] = useState([]);\n\n  /**\n   * @type State[]\n   */\n  const [states, setStates] = useState([]);\n\n  useEffect(() => {\n    DataService.getStatesConstituenciesAndCandidates().then(\n      ({ states, constituencies, candidates }) => {\n        setStates(states);\n        setCandidates(candidates);\n        setConstituencies(constituencies);\n      }\n    );\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <Layout>\n        <Sider\n          breakpoint=\"lg\"\n          collapsedWidth=\"0\"\n          onBreakpoint={(broken) => {\n            console.log(broken);\n          }}\n          onCollapse={(collapsed, type) => {\n            console.log(collapsed, type);\n          }}\n        >\n          <AppHeader {...{ page, setPage }} />\n        </Sider>\n         \n        <Layout className=\"layout\">\n          <Content key={page} style={{ margin: \"24px 16px 0\" }}>\n            <div\n              className=\"site-layout-background\"\n              style={{ padding: 24, minHeight: 360 }}\n            >\n              {page === \"1\" ? (\n                <StateWisePage {...{ states }} />\n              ) : page === \"2\" ? (\n                <MapView />\n              ) : page === \"4\" ? (\n                <SearchContainer {...{ states, candidates, constituencies }} />\n              ) : (\n                <div />\n              )}\n            </div>\n          </Content>\n          <Footer style={{ textAlign: \"center\" }}>\n            ©2021 Sathishkumar Maruthamuthu\n          </Footer>\n        </Layout>\n      </Layout>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}